version: '3.4'

networks:
  open-telemetry:
    name: custom-network

services:
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    restart: unless-stopped
    ports:
      - 5775:5775/udp
      - 5778:5778
      - 6831:6831/udp
      - 6832:6832/udp
      - 9411:9411
      - 14268:14268
      - 16686:16686
    networks:
      - open-telemetry

  usersDb:
    image: mcmoe/mssqldocker
    container_name: usersDb
    environment:
      - SA_PASSWORD=Password123!
      - ACCEPT_EULA=Y
      - MSSQL_DB=UsersStore
      - MSSQL_USER=sqlserver
      - MSSQL_PASSWORD=Password123!
    ports:
      - "5333:1433"
    networks:
      - open-telemetry

  redis:
    image: redis:6.2.1
    container_name: redis    
    ports:
      - 6379:6379
    networks:
      - open-telemetry

  userswebapi:
    container_name: userswebapi
    image: ${DOCKER_REGISTRY-}opentelemetry.demo.users.webapi
    build:
      context: .
      dockerfile: src/OpenTelemetry.Demo.Users.WebApi/Dockerfile
    ports:
      - "5000:80"
    networks:
      - open-telemetry
    depends_on:
      - jaeger
      - usersDb
      - legislationswebapi
    environment:
      JaegerExporter__AgentHost: jaeger
      JaegerExporter__AgentPort: 6831
      Datasource__ConnectionString: Server=usersDb;Database=UsersStore;Integrated Security=False;User ID=sqlserver;Password=Password123!;Application Name=UsersService;ConnectRetryCount=5;ConnectRetryInterval=5;
      
  legislationswebapi:
    container_name: legislationsswebapi
    image: ${DOCKER_REGISTRY-}opentelemetry.demo.legislations.webapi
    build:
      context: .
      dockerfile: src/OpenTelemetry.Demo.Legislations.WebApi/Dockerfile
    ports:
      - "6000:80"
    networks:
      - open-telemetry
    depends_on:
      - jaeger
      - redis
    environment:
      JaegerExporter__AgentHost: jaeger
      JaegerExporter__AgentPort: 6831
      Redis__Host: redis
      Redis__Port: 6379